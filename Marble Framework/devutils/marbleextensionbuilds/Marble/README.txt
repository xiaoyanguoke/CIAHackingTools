
================================ Setup Instructions For Marble Framework v1.0==============================

File/Folder Structure:

	When using Marble as a part of Corelib you must be sure to include your submodules as additional include directories in your
	project properties. Project Properties->C/C++->General->Additional Include Directories: $(Subs);. The Marble.horig file should
	be copied to the solution Shared directory (as Marble.h). Marble.h and Corelib.lib should be included in any project where you
	intend to obfuscate strings/data.

	
Pre-Build Event:
	
	CALL "$(Subs)Corelib\CoreLib_Utils\Marble\Mender.exe" "$(SolutionDir)\" 
	CALL "$(Subs)Corelib\CoreLib_Utils\Marble\Mibster.exe" "$(SolutionDir)\" "$(SolutionDir)Shared\\" "$(Bin)$(Configuration)\$(Platform)\\"

	The argument list for the pre-build events are:
	Mender
		- Path to solution
	Mibster
		- Path to solution or project directory
		- Path to directory containing Marble.h
		- Path to directory where receipt file will be placed


Post-Build Event:

	Mender:
		CALL "$(Subs)Corelib\CoreLib_Utils\Marble\Mender.exe" "$(SolutionDir)\"

	The args for the Mender:
		- Path to Solution/Project directory to "mend" or repair
	
	Validator:
		CALL "$(Subs)Corelib\CoreLib_Utils\Marble\Validator.exe" "$(Bin)$(Configuration)\$(Platform)\MarbleReceipt.xml" "$(Bin)$(Configuration)\$(Platform)\$(ProjectName)$(TargetExt)"

	The args for the Validator:
		- Path to the MarbleReceipt.xml file generated by the Mibster (Pre-Build)
		- Path to the generated binary